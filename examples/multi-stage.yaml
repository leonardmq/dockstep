version: "1.0"
name: "multi-stage-example"

settings: {}

blocks:
  - id: "build-base"
    from: "node:18-alpine"
    instructions:
      - "WORKDIR /build"
      - "RUN echo 'Setting up build environment'"
      - "RUN apk add --no-cache git python3 make g++"

  - id: "build-deps"
    from_block: "build-base"
    instructions:
      - "WORKDIR /build"
      - "RUN echo 'Installing build dependencies'"
      - "RUN npm install -g typescript @types/node"
      - "RUN npm init -y"
      - "RUN npm install express"

  - id: "build"
    from_block: "build-deps"
    instructions:
      - "WORKDIR /build"
      - "RUN echo 'Building application'"
      - "RUN mkdir -p src"
      - "RUN echo 'import express from \"express\";' > src/app.ts"
      - "RUN echo 'const app = express();' >> src/app.ts"
      - "RUN echo 'app.get(\"/\", (req, res) => res.send(\"Hello!\"));' >> src/app.ts"
      - "RUN echo 'app.listen(3000);' >> src/app.ts"
      - "RUN npx tsc src/app.ts --outDir dist --target es2020 --module commonjs"

  - id: "runtime"
    from: "node:18-alpine"
    instructions:
      - "WORKDIR /app"
      - "ENV NODE_ENV=production"
      - "RUN echo 'Setting up runtime environment'"
      - "RUN apk add --no-cache dumb-init"
      - "# Copy built application (in real scenario, this would be from build stage)"
      - "RUN mkdir -p /app/dist"
      - "RUN echo 'const express = require(\"express\");' > dist/app.js"
      - "RUN echo 'const app = express();' >> dist/app.js"
      - "RUN echo 'app.get(\"/\", (req, res) => res.send(\"Hello!\"));' >> dist/app.js"
      - "RUN echo 'app.listen(3000);' >> dist/app.js"
    export:
      labels:
        maintainer: "dockstep"
        version: "1.0.0"
      entrypoint: ["dumb-init", "--"]
      cmd: ["node", "/app/dist/app.js"]
