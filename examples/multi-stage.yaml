version: "1.0"
name: "multi-stage-example"

settings:
  network: "default"
  shell: "/bin/sh"

blocks:
  - id: "build-base"
    from: "node:18-alpine"
    workdir: "/build"
    cmd: |
      echo "Setting up build environment"
      apk add --no-cache git python3 make g++

  - id: "build-deps"
    from_block: "build-base"
    workdir: "/build"
    cmd: |
      echo "Installing build dependencies"
      npm install -g typescript @types/node
      npm init -y
      npm install express

  - id: "build"
    from_block: "build-deps"
    workdir: "/build"
    cmd: |
      echo "Building application"
      echo 'import express from "express";' > src/app.ts
      echo 'const app = express();' >> src/app.ts
      echo 'app.get("/", (req, res) => res.send("Hello!"));' >> src/app.ts
      echo 'app.listen(3000);' >> src/app.ts
      npx tsc src/app.ts --outDir dist --target es2020 --module commonjs

  - id: "runtime"
    from: "node:18-alpine"
    workdir: "/app"
    env:
      - "NODE_ENV=production"
    cmd: |
      echo "Setting up runtime environment"
      apk add --no-cache dumb-init
      # Copy built application (in real scenario, this would be from build stage)
      mkdir -p /app/dist
      echo 'const express = require("express");' > dist/app.js
      echo 'const app = express();' >> dist/app.js
      echo 'app.get("/", (req, res) => res.send("Hello!"));' >> dist/app.js
      echo 'app.listen(3000);' >> dist/app.js
    export:
      labels:
        maintainer: "dockstep"
        version: "1.0.0"
      entrypoint: ["dumb-init", "--"]
      cmd: ["node", "/app/dist/app.js"]
